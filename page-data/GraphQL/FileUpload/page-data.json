{"componentChunkName":"component---src-templates-blog-post-js","path":"/GraphQL/FileUpload/","result":{"data":{"site":{"siteMetadata":{"title":"imzeze Blog"}},"markdownRemark":{"id":"cadcfbb7-cf5d-5f3f-8668-e9bee89ea624","excerpt":"Apollo Server Apollo Server 2.x부터는 File upload를 하기 위해  모듈이 필요하다.  https://www.npmjs.com/package/graphql-upload Apollo sever는 기존에 default로 upload…","html":"<h2>Apollo Server</h2>\n<hr>\n<p>Apollo Server 2.x부터는 File upload를 하기 위해 <code class=\"language-text\">graphql-upload</code> 모듈이 필요하다. </p>\n<blockquote>\n<p><a href=\"https://www.npmjs.com/package/graphql-upload\">https://www.npmjs.com/package/graphql-upload</a></p>\n</blockquote>\n<p>Apollo sever는 기존에 default로 upload 기능을  지원하고 있었기 때문에 <code class=\"language-text\">graphql-upload</code>를 사용하기 위해서는 Apollo server를 생성할 때 <code class=\"language-text\">uploads:false</code> 옵션을 추가해야 한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  resolvers<span class=\"token punctuation\">,</span>\n  uploads<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...other Apollo Server Setting</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>  \n<h2>Schema</h2>\n<hr>\n<br/>  \n<h3>typeDefs</h3>\n<p>file은 <code class=\"language-text\">graphql-upload</code>의 <code class=\"language-text\">FileUpload</code> 타입으로 받고,\nreturn type으로 <code class=\"language-text\">UploadedFileResponse</code>를 지정했다.<br>\n또한 <code class=\"language-text\">graphql-upload</code>를 사용하기 위해 graphql의 <code class=\"language-text\">scalar</code> type으로 <code class=\"language-text\">Upload</code>를 추가해야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> gql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apollo-server-express'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GraphQLUpload<span class=\"token punctuation\">,</span> FileUpload <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-upload'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> typeDefs <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\tscalar Upload\n\n\ttype UploadedFileResponse {\n\t\tfilename: String!\n\t\tmimetype: String!\n\t\tencoding: String!\n\t\tpath: String!\n\t}\n\n\textend type Mutation {\n\t\tsingleUpload(file: Upload!): UploadedFileResponse!\n\t}\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<br/>\n<h3>resolver</h3>\n<p>resolver에도 <code class=\"language-text\">Upload: GraphQLUpload</code>을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> resolvers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tUpload<span class=\"token operator\">:</span> GraphQLUpload<span class=\"token punctuation\">,</span>\n\tMutation<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\tsingleUpload<span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>_<span class=\"token operator\">:</span> unknown<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> file <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> file<span class=\"token operator\">:</span> FileUpload <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span>UploadedFileResponse<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\">// 파일 업로드 구현 </span>\n\t\t\t<span class=\"token keyword\">const</span> fileHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">const</span> upload <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fileHandler<span class=\"token punctuation\">.</span><span class=\"token function\">processUpload</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> upload\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h2>util</h2>\n<hr>\n<p>파일을 디렉토리에 업로드하기 위해 <code class=\"language-text\">fs</code> 모듈을 사용한다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createWriteStream<span class=\"token punctuation\">,</span> mkdir <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FileUpload <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'graphql-upload'</span>\n\n<span class=\"token keyword\">export</span> type UploadedFileResponse <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tfilename<span class=\"token operator\">:</span> string\n\tmimetype<span class=\"token operator\">:</span> string\n\tencoding<span class=\"token operator\">:</span> string\n\tpath<span class=\"token operator\">:</span> string\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileHandler</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token function\">storeUpload</span><span class=\"token punctuation\">(</span>upload<span class=\"token operator\">:</span> FileUpload<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span>UploadedFileResponse<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t\tupload\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">createReadStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/../../../files/images/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>upload<span class=\"token punctuation\">.</span>filename<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'finish'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>upload<span class=\"token punctuation\">,</span> path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/files/images/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>upload<span class=\"token punctuation\">.</span>filename<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">async</span> <span class=\"token function\">processUpload</span><span class=\"token punctuation\">(</span>upload<span class=\"token operator\">:</span> FileUpload<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span>UploadedFileResponse<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/../../../files/images/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> recursive<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> err\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createReadStream<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">,</span> mimetype<span class=\"token punctuation\">,</span> encoding <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> upload\n\n\t\t<span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> FileHandler<span class=\"token punctuation\">.</span><span class=\"token function\">storeUpload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> createReadStream<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">,</span> mimetype<span class=\"token punctuation\">,</span> encoding <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> file\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<hr>\n<h4>reference</h4>\n<p><a href=\"https://www.apollographql.com/docs/apollo-server/migration-file-uploads/\">File uploads in Node.js &#x3C; v8.5.0</a><br>\n<a href=\"https://www.apollographql.com/blog/graphql-file-uploads-with-react-hooks-typescript-amazon-s3-tutorial-ef39d21066a2/\">☝️ GraphQL File Uploads with React Hooks, TypeScript &#x26; Amazon S3 [Tutorial]</a></p>","frontmatter":{"title":"Apollo Server에서 File Upload 하는 방법","date":"February 03, 2021","description":"with Apollo Server"}},"previous":null,"next":{"fields":{"slug":"/JS/변수와 메모리/"},"frontmatter":{"title":"JS 변수 메모리 할당"}}},"pageContext":{"id":"cadcfbb7-cf5d-5f3f-8668-e9bee89ea624","previousPostId":null,"nextPostId":"27a2afc6-014d-5b9c-828a-ffdc096099d9"}},"staticQueryHashes":["2841359383","3257411868"]}