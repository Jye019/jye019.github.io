{"componentChunkName":"component---src-templates-blog-post-js","path":"/JS/null과undefined/","result":{"data":{"site":{"siteMetadata":{"title":"imzeze Blog"}},"markdownRemark":{"id":"af9d5909-dd77-5371-9e12-f2dc7dd475f8","excerpt":"과 는 JS의 어느 자료형에도 속하지 않는 값으로, 오로지 자신만의 자료형을 만든다. 위와 같이 을 할당하는 것은 알 수 없는(unknown), 비어 있는(empty…","html":"<p><code class=\"language-text\">null</code>과 <code class=\"language-text\">undefined</code>는 JS의 어느 자료형에도 속하지 않는 값으로, 오로지 자신만의 자료형을 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 <code class=\"language-text\">null</code>을 할당하는 것은 <strong>알 수 없는(unknown)</strong>, <strong>비어 있는(empty)</strong> 변수임을 나타낸다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">undefined</code>는 <strong>값이 할당되지 않은 상태인</strong> 변수임을 나타낸다. 즉, 값이 할당되지 않은 변수의 초기화를 위해 사용된다. </p>\n<br/>\n<h3>undefined이 반환되는 경우</h3>\n<p>JS 엔진은 다음 세가지 경우와 같이 값이 할당되어 있지 않는 경우 자동으로 undefined를 할당한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// a = undefined</span>\n\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// obj.a = undefiend</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> exec <span class=\"token operator\">=</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// exec = undefined</span></code></pre></div>\n<br/>  \n<h3>typeof null === object</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">undefined</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// object</span></code></pre></div>\n<p><code class=\"language-text\">typeof</code>연산자를 이용해 <code class=\"language-text\">undefined</code>의 자료형을 출력하면 <code class=\"language-text\">undefined</code>가 나오는 반면 <code class=\"language-text\">null</code>의 자료형을 출력하면 <code class=\"language-text\">Object</code>가 나오는 것을 확인할 수 있다. 이는 <code class=\"language-text\">null</code>이 객체임을 나타내는 것은 아니다. <code class=\"language-text\">null</code>은 별도의 고유한 자료형을 가지는 특수 값일 뿐, 언어의 하위 호환성을 유지하기 위해 이런 오류를 수정하지 않고 남겨둔 상황이다. </p>\n<br/>\n<h3>null과 undefined의 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> c<span class=\"token punctuation\">;</span></code></pre></div>\n<p>위에서 언급한 바와 같이 변수를 초기화하지 않고 생성하면 자동으로 <code class=\"language-text\">undefined</code>가 할당된다. 따라서 <code class=\"language-text\">undefined</code>는 예약어로써 사용하는 것이 권장되며 변수가 비어있다는 것을 직접적으로 명시하기 위해서는 <code class=\"language-text\">null</code>을 사용하는 것이 좋다.  </p>\n<p>또한 <code class=\"language-text\">null</code>은 GC의 대상이 되기 때문에 memory 관리를 위해 <code class=\"language-text\">null</code>을 사용하기도 한다. </p>\n<br/>\n<hr>\n<h4>Reference</h4>\n<p><a href=\"https://ko.javascript.info/types\">자료형</a>  </p>","frontmatter":{"title":"null과 undefined","date":"March 10, 2021","description":null}},"previous":{"fields":{"slug":"/JS/변수와 메모리/"},"frontmatter":{"title":"JS 변수 메모리 할당"}},"next":{"fields":{"slug":"/JS/shallow&Deep/"},"frontmatter":{"title":"객체 복사"}}},"pageContext":{"id":"af9d5909-dd77-5371-9e12-f2dc7dd475f8","previousPostId":"27a2afc6-014d-5b9c-828a-ffdc096099d9","nextPostId":"5504848d-fb58-5117-9366-f27a35003a99"}},"staticQueryHashes":["2841359383","3257411868"]}